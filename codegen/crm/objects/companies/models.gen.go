// Package companies provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package companies

import (
	"time"
)

// Defines values for FilterOperator.
const (
	CONTAINSTOKEN    FilterOperator = "CONTAINS_TOKEN"
	EQ               FilterOperator = "EQ"
	GT               FilterOperator = "GT"
	GTE              FilterOperator = "GTE"
	HASPROPERTY      FilterOperator = "HAS_PROPERTY"
	LT               FilterOperator = "LT"
	LTE              FilterOperator = "LTE"
	NEQ              FilterOperator = "NEQ"
	NOTCONTAINSTOKEN FilterOperator = "NOT_CONTAINS_TOKEN"
	NOTHASPROPERTY   FilterOperator = "NOT_HAS_PROPERTY"
)

// Defines values for SortDirection.
const (
	ASCENDING  SortDirection = "ASCENDING"
	DESCENDING SortDirection = "DESCENDING"
)

// AssociationResponse defines model for AssociationResponse.
type AssociationResponse struct {
	Id   *int64  `json:"id,omitempty"`
	Type *string `json:"type,omitempty"`
}

// CompaniesResponse defines model for CompaniesResponse.
type CompaniesResponse struct {
	Paging  *Paging            `json:"paging,omitempty"`
	Results *[]CompanyResponse `json:"results,omitempty"`
}

// CompaniesSearchResponse defines model for CompaniesSearchResponse.
type CompaniesSearchResponse struct {
	Paging  *Paging                  `json:"paging,omitempty"`
	Results *[]CompanySearchResponse `json:"results,omitempty"`
	Total   *int                     `json:"total,omitempty"`
}

// CompanyAssociations defines model for CompanyAssociations.
type CompanyAssociations struct {
	Contacts *ObjectAssociationsResponse `json:"contacts,omitempty"`
	Deals    *ObjectAssociationsResponse `json:"deals,omitempty"`
	Tickets  *ObjectAssociationsResponse `json:"tickets,omitempty"`
}

// CompanyProperties defines model for CompanyProperties.
type CompanyProperties struct {
	// Address The street address of the company or organization, including unit number. Powered by HubSpot Insights.
	Address *string `json:"address,omitempty"`

	// Address2 The additional address of the company or organization. Powered by HubSpot Insights.
	Address2 *string `json:"address2,omitempty"`

	// City The city where the company is located. Powered by HubSpot Insights.
	City *string `json:"city,omitempty"`

	// Country The country/region in which the company or organization is located. Powered by HubSpot Insights.
	Country *string `json:"country,omitempty"`

	// Createdate The date the company or organization was added to the database.
	Createdate *time.Time `json:"createdate,omitempty"`

	// CustomerId The Cirris customer identification number.
	CustomerId *string `json:"customer_id,omitempty"`

	// Description A short statement about the company's mission and goals. Powered by HubSpot Insights.
	Description *string `json:"description,omitempty"`

	// Domain The domain name of the company or organization
	Domain *string `json:"domain,omitempty"`

	// HsLastmodifieddate Most recent timestamp of any property update for this company. This includes HubSpot internal properties, which can be visible or hidden. This property is updated automatically.
	HsLastmodifieddate *time.Time `json:"hs_lastmodifieddate,omitempty"`

	// HsLeadStatus The company's sales, prospecting or outreach status.
	HsLeadStatus *string `json:"hs_lead_status,omitempty"`

	// HsObjectId The unique ID for this company. This unique ID is automatically populated by HubSpot and cannot be changed.
	HsObjectId *string `json:"hs_object_id,omitempty"`

	// HubspotOwnerAssigneddate The timestamp when an owner was assigned to this company.
	HubspotOwnerAssigneddate *time.Time `json:"hubspot_owner_assigneddate,omitempty"`

	// Lifecyclestage The most advanced lifecycle stage across all contacts associated with this company or organization.
	Lifecyclestage *string `json:"lifecyclestage,omitempty"`

	// Name The name of the company or organization. Powered by HubSpot Insights.
	Name *string `json:"name,omitempty"`

	// NotesLastContacted The last timestamp when a call, email or meeting was logged for a contact at this company.
	NotesLastContacted *time.Time `json:"notes_last_contacted,omitempty"`

	// NotesLastUpdated The last time a note, call, meeting, or task was logged for a company. This is set automatically by HubSpot based on user actions in the company record.
	NotesLastUpdated *time.Time `json:"notes_last_updated,omitempty"`

	// Phone A company's primary phone number. Powered by HubSpot Insights.
	Phone *string `json:"phone,omitempty"`

	// State The state or region in which the company or organization is located. Powered by HubSpot Insights.
	State *string `json:"state,omitempty"`

	// Website The main website of the company or organization. This property is used to identify unique companies. Powered by HubSpot Insights.
	Website *string `json:"website,omitempty"`

	// Zip The postal or zip code of the company or organization. Powered by HubSpot Insights.
	Zip *string `json:"zip,omitempty"`
}

// CompanyResponse defines model for CompanyResponse.
type CompanyResponse struct {
	Archived     *bool                `json:"archived,omitempty"`
	Associations *CompanyAssociations `json:"associations,omitempty"`
	CreatedAt    *time.Time           `json:"createdAt,omitempty"`
	Id           *string              `json:"id,omitempty"`
	Properties   *CompanyProperties   `json:"properties,omitempty"`
	UpdatedAt    *time.Time           `json:"updatedAt,omitempty"`
}

// CompanySearchResponse defines model for CompanySearchResponse.
type CompanySearchResponse struct {
	Archived   *bool              `json:"archived,omitempty"`
	CreatedAt  *time.Time         `json:"createdAt,omitempty"`
	Id         *string            `json:"id,omitempty"`
	Properties *CompanyProperties `json:"properties,omitempty"`
	UpdatedAt  *time.Time         `json:"updatedAt,omitempty"`
}

// Filter defines model for Filter.
type Filter struct {
	Operator     *FilterOperator `json:"operator,omitempty"`
	PropertyName *string         `json:"propertyName,omitempty"`
	Value        *string         `json:"value,omitempty"`
}

// FilterOperator defines model for Filter.Operator.
type FilterOperator string

// Filters defines model for Filters.
type Filters struct {
	Filters *[]Filter `json:"filters,omitempty"`
}

// ObjectAssociationsResponse defines model for ObjectAssociationsResponse.
type ObjectAssociationsResponse struct {
	Results *[]AssociationResponse `json:"results,omitempty"`
}

// Paging defines model for Paging.
type Paging struct {
	Next *PagingNext `json:"next,omitempty"`
}

// PagingNext defines model for PagingNext.
type PagingNext struct {
	After *string `json:"after,omitempty"`
	Link  *string `json:"link,omitempty"`
}

// SearchParams defines model for SearchParams.
type SearchParams struct {
	After *int `json:"after,omitempty"`

	// FilterGroups Use filters in the request body to limit the results to only CRM objects with matching property values.
	FilterGroups *[]Filters `json:"filterGroups,omitempty"`
	Limit        *int       `json:"limit,omitempty"`
	Properties   *[]string  `json:"properties,omitempty"`
	Query        *string    `json:"query,omitempty"`

	// Sorts Use a sorting rule in the request body to see results in a specific order (ascending or descending). Only one sorting rule can be applied to any search.
	Sorts *[]Sort `json:"sorts,omitempty"`
}

// Sort defines model for Sort.
type Sort struct {
	Direction    *SortDirection `json:"direction,omitempty"`
	PropertyName *string        `json:"propertyName,omitempty"`
}

// SortDirection defines model for Sort.Direction.
type SortDirection string
