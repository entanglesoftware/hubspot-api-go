openapi: 3.0.0
info:
  title: HubSpot Carts API
  description: API for fetching carts from HubSpot
  version: v3
servers:
  - url: https://api.hubapi.com/
security:
  - oauth2: ['crm.objects.carts.write']
paths:
  /crm/v3/objects/carts:
    get:
      summary: Retrieve a list of carts
      description: Fetches carts with pagination and properties.
      operationId: getCarts
      parameters:
        - name: limit
          in: query
          description: Maximum number of results per page.
          required: false
          schema:
            type: integer
            default: 10
          example: 50
        - name: after
          in: query
          description: Cursor token for the next page of results.
          required: false
          schema:
            type: string
          example: "MjA1MA=="
        - $ref: 'components.yaml#/components/parameters/Properties'
        - $ref: 'components.yaml#/components/parameters/PropertiesWithHistory'
        - $ref: 'components.yaml#/components/parameters/Associations'
        - $ref: 'components.yaml#/components/parameters/Archived'
      responses:
        "200":
          description: Paginated list of carts.
          content:
            application/json:
              schema:
                $ref: "components.yaml#/components/schemas/CartsResponse"
    post:
      summary: Create a single cart
      description: Create a single cart. Include a properties object to define property values for the cart, along with an associations array to define associations with other CRM records.
      operationId: createCart
      requestBody:
        description: Cart details to create a new cart.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                properties:
                  type: object
                  description: Key-value pairs of cart properties.
                  additionalProperties:
                    type: string
                associations:
                  type: array
                  description: List of associations for the cart.
                  items:
                    type: object
                    properties:
                      types:
                        type: array
                        items:
                          type: object
                          properties:
                            associationCategory:
                              type: string
                              description: Category of the association.
                              enum:
                                - Search
                                - HUBSPOT_DEFINED
                                - USER_DEFINED
                                - INTEGRATOR_DEFINED
                            associationTypeId:
                              type: integer
                              format: int32
                              description: ID of the association type.
                      to:
                        type: object
                        description: Target object details for the association.
                        properties:
                          id:
                            type: string
                            description: Target object ID.
              required:
                - properties
      responses:
        "201":
          description: Paginated list of carts.
          content:
            application/json:
              schema:
                $ref: "components.yaml#/components/schemas/CartResponse"
  /crm/v3/objects/carts/{cartId}:
    get:
      summary: Get a cart by ID
      description: Retrieve a cart by its ID, with optional properties, history, associations, and archived status.
      operationId: getCartById
      parameters:
        - name: cartId
          in: path
          required: true
          description: The ID of the cart to retrieve.
          schema:
            type: string

        - name: properties
          in: query
          description: Properties to include in the response.
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          required: false

        - name: propertiesWithHistory
          in: query
          description: Properties to include with their history.
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          required: false

        - name: associations
          in: query
          description: Associations to include in the response.
          schema:
            type: string
          required: false

        - name: archived
          in: query
          description: Whether to include archived carts.
          schema:
            type: boolean
          required: false
      responses:
        "200":
          description: Cart details.
          content:
            application/json:
              schema:
                $ref: "components.yaml#/components/schemas/CartResponse"
    patch:
      summary: Update a cart
      description: Updates the details of a cart in HubSpot CRM.
      operationId: updateCart
      parameters:
        - name: cartId
          in: path
          required: true
          description: The unique identifier of the cart to update.
          schema:
            type: string
      requestBody:
        description: Cart details to update.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                properties:
                  type: object
                  description: Key-value pairs representing the deal properties to update.
                  additionalProperties:
                    type: string
                    description: Value of the property to update.
              required:
                - properties
      responses:
        '200':
          description: Successfully updated the cart.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Unique ID of the updated cart.
                    x-go-type-skip-optional-pointer: true
                  properties:
                    type: object
                    description: Properties of the updated cart.
                    x-go-type-skip-optional-pointer: true
                  createdAt:
                    type: string
                    format: date-time
                    description: Timestamp when the cart was created.
                    x-go-type-skip-optional-pointer: true
                  archived:
                    type: boolean
                    description: Whether the customer is archived or not.
                    x-go-type-skip-optional-pointer: true
                  archivedAt:
                    type: string
                    format: date-time
                    description: Timestamp when the cart was archived.
                    x-go-type-skip-optional-pointer: true
                  updatedAt:
                    type: string
                    format: date-time
                    description: Timestamp when the cart was last updated.
                    x-go-type-skip-optional-pointer: true
                  propertiesWithHistory:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        $ref: "components.yaml#/components/schemas/PropertyHistory"
                    description: A map of the cart's properties including historical values.
                    x-go-type-skip-optional-pointer: true
    delete:
      summary: Delete a cart
      description: Deletes a cart from HubSpot using the provided cart ID.
      operationId: deleteCartById
      parameters:
        - name: cartId
          in: path
          required: true
          description: The unique ID of the cart to delete.
          schema:
            type: string
      responses:
        '204':
          description: No Content. The cart was successfully deleted.
  /crm/v3/objects/carts/batch/upsert:
    post:
      summary: Batch create or update carts
      description: Creates or updates multiple carts in a single batch request
      operationId: batchUpsertCarts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "components.yaml#/components/schemas/BatchCartsUpsertRequest"
      responses:
        "200":
          description: Batch operation completed
          content:
            application/json:
              schema:
                $ref: "components.yaml#/components/schemas/BatchCartsResponse"
        "400":
          $ref: "components.yaml#/components/responses/ErrorResponse"
      security:
        - oauth2: [ 'e-commerce' ]
  /crm/v3/objects/carts/search:
    $ref: './search.yaml#/search'